getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/EveValdes/SynCityGui/main/SynCityGui'))()
local InfBreathing = false
local SpeedBValue = false
local players = game.Players:GetPlayers()

local Window = Rayfield:CreateWindow({
   Name = "                                     ðŸ‘‘ Syn City ðŸ‘‘",
   LoadingTitle = "    Welcome To Syn City",
   LoadingSubtitle = "           Rouge Demon",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = SynCity, -- Create a custom folder for your hub/game
      FileName = "SynCity"
   },
   Discord = {
      Enabled = true,
      Invite = "H3ZvweSS", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Combat") -- Title, Image
local Section = Tab:CreateSection("CombatOptions")

 local Toggle = Tab:CreateToggle({
   Name = "Inf Beathing",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      InfBreathing = true
      while InfBreathing == true do
      local args = {[1] = "Start"}game:GetService("ReplicatedStorage").Knit.Packages._Index:FindFirstChild("sleitnick_knit@1.5.1").knit.Services.BreathingService.RE.Breath:FireServer(unpack(args))
        wait()
        end
    end
})

 local Button = Tab:CreateButton({
   Name = "Instant Reset",
   Callback = function()
      game.Players.LocalPlayer.Character.Torso:Destroy()

   end,
})

local Tab = Window:CreateTab("ESP") -- Title, Image

local Button = Tab:CreateButton({
   Name = "ESP",
   Callback = function()
local Esp = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/x114/RobloxScripts/main/OpenSourceEsp"))()
-- Boxes --

Esp.HealthBar = true
Esp.HealthBarSide = "Left" -- Left,Bottom,Right
-- Names --
Esp.Names = true
Esp.NamesColor = Color3.fromRGB(120, 81, 169)
Esp.NamesOutline = true
Esp.NamesFont = 2
Esp.NamesSize = 12   end,
})

local Tab = Window:CreateTab("Local Player") -- Title, Image
local Section = Tab:CreateSection("LocalPlayer Adjustements")
local Label = Tab:CreateLabel("Also Acts as a NoStun")


local Slider = Tab:CreateSlider({
   Name = "Player Speed",
   Range = {1, 70},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 20,
   Flag = "Speed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      SpeedBValue = true
      while SpeedBValue == true do
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
      wait(0.0000000000000001)
        end
    end
})

local Label = Tab:CreateLabel("Toggle Speed (Rec 1-70 for no ban)")

local Input = Tab:CreateInput({
   Name = "Input Example",
   PlaceholderText = "InsertToggleSpeed",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
   ToggleValue = Text
   end,
})

local Keybind = Tab:CreateKeybind({
   Name = "Toogle Speed",
   CurrentKeybind = "H",
   HoldToInteract = false,
   Flag = "Keybind1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Keybind)
         game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ToggleValue

   end,
})

local Paragraph = Tab:CreateParagraph({Title = "Notice", Content = "Speed May Stutter (As it functions as a NoStun aswell) also bind a toggle speed to use along side if issues further"})



Rayfield:LoadConfiguration()
